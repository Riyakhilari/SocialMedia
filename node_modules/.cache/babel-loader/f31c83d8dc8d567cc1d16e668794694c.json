{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RIYA\\\\Downloads\\\\social-media-app\\\\src\\\\pages\\\\HomePage.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../features/posts/postsSlice';\nimport PostCard from '../components/PostCard';\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.items);\n  const status = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [status, dispatch]);\n  if (status === 'loading') return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 36\n    }\n  }, \"Loading...\");\n  if (status === 'failed') return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }\n  }, \"Error: \", error);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, posts.map(post => /*#__PURE__*/React.createElement(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\nexport default HomePage;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchPosts","PostCard","HomePage","dispatch","posts","state","items","status","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","key","id"],"sources":["C:/Users/RIYA/Downloads/social-media-app/src/pages/HomePage.js"],"sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPosts } from '../features/posts/postsSlice';\nimport PostCard from '../components/PostCard';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.items);\n  const status = useSelector(state => state.posts.status);\n  const error = useSelector(state => state.posts.error);\n\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchPosts());\n    }\n  }, [status, dispatch]);\n\n  if (status === 'loading') return <p>Loading...</p>;\n  if (status === 'failed') return <p>Error: {error}</p>;\n\n  return (\n    <div className=\"grid\">\n      {posts.map(post => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,QAAQ,MAAM,wBAAwB;AAE7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACE,KAAK,CAAC;EACrD,MAAMC,MAAM,GAAGR,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACG,MAAM,CAAC;EACvD,MAAMC,KAAK,GAAGT,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAACI,KAAK,CAAC;EAErDX,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,KAAK,MAAM,EAAE;MACrBJ,QAAQ,CAACH,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACO,MAAM,EAAEJ,QAAQ,CAAC,CAAC;EAEtB,IAAII,MAAM,KAAK,SAAS,EAAE,oBAAOX,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC;EAClD,IAAIR,MAAM,KAAK,QAAQ,EAAE,oBAAOX,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,EAACP,KAAS,CAAC;EAErD,oBACEZ,KAAA,CAAAa,aAAA;IAAKO,SAAS,EAAC,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClBX,KAAK,CAACa,GAAG,CAACC,IAAI,iBACbtB,KAAA,CAAAa,aAAA,CAACR,QAAQ;IAACkB,GAAG,EAAED,IAAI,CAACE,EAAG;IAACF,IAAI,EAAEA,IAAK;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACtC,CACE,CAAC;AAEV,CAAC;AAED,eAAeb,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}